%% Generated with 'testgen v0.2.0'
%% Revision 1 of the exercises generator was used
%% https://github.com/exercism/problem-specifications/raw/647c1ed59ebedf05873391a3223710c6be2c4a2d/exercises/queen-attack/canonical-data.json
%% This file is automatically generated from the exercises canonical data.

-module(queen_attack_tests).

-include_lib("erl_exercism/include/exercism.hrl").
-include_lib("eunit/include/eunit.hrl").




'1_cannot_attack_test_'() ->
    {"cannot attack",
     ?_assertNot(queen_attack:can_attack({4, 2}, {6, 6}))}.

'2_can_attack_on_same_row_test_'() ->
    {"can attack on same row",
     ?_assert(queen_attack:can_attack({4, 2}, {6, 2}))}.

'3_can_attack_on_same_column_test_'() ->
    {"can attack on same column",
     ?_assert(queen_attack:can_attack({5, 4}, {5, 2}))}.

'4_can_attack_on_first_diagonal_test_'() ->
    {"can attack on first diagonal",
     ?_assert(queen_attack:can_attack({2, 2}, {4, 0}))}.

'5_can_attack_on_second_diagonal_test_'() ->
    {"can attack on second diagonal",
     ?_assert(queen_attack:can_attack({2, 2}, {1, 3}))}.

'6_can_attack_on_third_diagonal_test_'() ->
    {"can attack on third diagonal",
     ?_assert(queen_attack:can_attack({2, 2}, {1, 1}))}.

'7_can_attack_on_fourth_diagonal_test_'() ->
    {"can attack on fourth diagonal",
     ?_assert(queen_attack:can_attack({7, 1}, {6, 0}))}.

'8_cannot_attack_if_falling_diagonals_are_only_the_same_when_reflected_across_the_longest_falling_diagonal_test_'() ->
    {"cannot attack if falling diagonals are "
     "only the same when reflected across "
     "the longest falling diagonal",
     ?_assertNot(queen_attack:can_attack({1, 4}, {5, 2}))}.
