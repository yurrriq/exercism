%% Generated with 'testgen v0.2.0'
%% Revision 1 of the exercises generator was used
%% https://github.com/exercism/problem-specifications/raw/d137db179c6a760be6aa6e38ac0110e96be0b9ff/exercises/protein-translation/canonical-data.json
%% This file is automatically generated from the exercises canonical data.

-module(protein_translation_tests).

-include_lib("erl_exercism/include/exercism.hrl").
-include_lib("eunit/include/eunit.hrl").




'1_empty_rna_sequence_results_in_no_proteins_test_'() ->
    {"Empty RNA sequence results in no proteins",
     ?_assertMatch({ok, []},
		   protein_translation:proteins([]))}.

'2_methionine_rna_sequence_test_'() ->
    {"Methionine RNA sequence",
     ?_assertMatch({ok, [methionine]},
		   protein_translation:proteins("AUG"))}.

'3_phenylalanine_rna_sequence_1_test_'() ->
    {"Phenylalanine RNA sequence 1",
     ?_assertMatch({ok, [phenylalanine]},
		   protein_translation:proteins("UUU"))}.

'4_phenylalanine_rna_sequence_2_test_'() ->
    {"Phenylalanine RNA sequence 2",
     ?_assertMatch({ok, [phenylalanine]},
		   protein_translation:proteins("UUC"))}.

'5_leucine_rna_sequence_1_test_'() ->
    {"Leucine RNA sequence 1",
     ?_assertMatch({ok, [leucine]},
		   protein_translation:proteins("UUA"))}.

'6_leucine_rna_sequence_2_test_'() ->
    {"Leucine RNA sequence 2",
     ?_assertMatch({ok, [leucine]},
		   protein_translation:proteins("UUG"))}.

'7_serine_rna_sequence_1_test_'() ->
    {"Serine RNA sequence 1",
     ?_assertMatch({ok, [serine]},
		   protein_translation:proteins("UCU"))}.

'8_serine_rna_sequence_2_test_'() ->
    {"Serine RNA sequence 2",
     ?_assertMatch({ok, [serine]},
		   protein_translation:proteins("UCC"))}.

'9_serine_rna_sequence_3_test_'() ->
    {"Serine RNA sequence 3",
     ?_assertMatch({ok, [serine]},
		   protein_translation:proteins("UCA"))}.

'10_serine_rna_sequence_4_test_'() ->
    {"Serine RNA sequence 4",
     ?_assertMatch({ok, [serine]},
		   protein_translation:proteins("UCG"))}.

'11_tyrosine_rna_sequence_1_test_'() ->
    {"Tyrosine RNA sequence 1",
     ?_assertMatch({ok, [tyrosine]},
		   protein_translation:proteins("UAU"))}.

'12_tyrosine_rna_sequence_2_test_'() ->
    {"Tyrosine RNA sequence 2",
     ?_assertMatch({ok, [tyrosine]},
		   protein_translation:proteins("UAC"))}.

'13_cysteine_rna_sequence_1_test_'() ->
    {"Cysteine RNA sequence 1",
     ?_assertMatch({ok, [cysteine]},
		   protein_translation:proteins("UGU"))}.

'14_cysteine_rna_sequence_2_test_'() ->
    {"Cysteine RNA sequence 2",
     ?_assertMatch({ok, [cysteine]},
		   protein_translation:proteins("UGC"))}.

'15_tryptophan_rna_sequence_test_'() ->
    {"Tryptophan RNA sequence",
     ?_assertMatch({ok, [tryptophan]},
		   protein_translation:proteins("UGG"))}.

'16_stop_codon_rna_sequence_1_test_'() ->
    {"STOP codon RNA sequence 1",
     ?_assertMatch({ok, []},
		   protein_translation:proteins("UAA"))}.

'17_stop_codon_rna_sequence_2_test_'() ->
    {"STOP codon RNA sequence 2",
     ?_assertMatch({ok, []},
		   protein_translation:proteins("UAG"))}.

'18_stop_codon_rna_sequence_3_test_'() ->
    {"STOP codon RNA sequence 3",
     ?_assertMatch({ok, []},
		   protein_translation:proteins("UGA"))}.

'19_sequence_of_two_protein_codons_translates_into_proteins_test_'() ->
    {"Sequence of two protein codons translates "
     "into proteins",
     ?_assertMatch({ok, [phenylalanine, phenylalanine]},
		   protein_translation:proteins("UUUUUU"))}.

'20_sequence_of_two_different_protein_codons_translates_into_proteins_test_'() ->
    {"Sequence of two different protein codons "
     "translates into proteins",
     ?_assertMatch({ok, [leucine, leucine]},
		   protein_translation:proteins("UUAUUG"))}.

'21_translate_rna_strand_into_correct_protein_list_test_'() ->
    {"Translate RNA strand into correct protein "
     "list",
     ?_assertMatch({ok,
		    [methionine, phenylalanine, tryptophan]},
		   protein_translation:proteins("AUGUUUUGG"))}.

'22_translation_stops_if_stop_codon_at_beginning_of_sequence_test_'() ->
    {"Translation stops if STOP codon at beginning "
     "of sequence",
     ?_assertMatch({ok, []},
		   protein_translation:proteins("UAGUGG"))}.

'23_translation_stops_if_stop_codon_at_end_of_two_codon_sequence_test_'() ->
    {"Translation stops if STOP codon at end "
     "of two-codon sequence",
     ?_assertMatch({ok, [tryptophan]},
		   protein_translation:proteins("UGGUAG"))}.

'24_translation_stops_if_stop_codon_at_end_of_three_codon_sequence_test_'() ->
    {"Translation stops if STOP codon at end "
     "of three-codon sequence",
     ?_assertMatch({ok, [methionine, phenylalanine]},
		   protein_translation:proteins("AUGUUUUAA"))}.

'25_translation_stops_if_stop_codon_in_middle_of_three_codon_sequence_test_'() ->
    {"Translation stops if STOP codon in middle "
     "of three-codon sequence",
     ?_assertMatch({ok, [tryptophan]},
		   protein_translation:proteins("UGGUAGUGG"))}.

'26_translation_stops_if_stop_codon_in_middle_of_six_codon_sequence_test_'() ->
    {"Translation stops if STOP codon in middle "
     "of six-codon sequence",
     ?_assertMatch({ok, [tryptophan, cysteine, tyrosine]},
		   protein_translation:proteins("UGGUGUUAUUAAUGGUUU"))}.

'27_non_existing_codon_cant_translate_test_'() ->
    {"Non-existing codon can't translate",
     ?_assertMatch({error, badarg},
		   protein_translation:proteins("AAA"))}.

'28_unknown_amino_acids_not_part_of_a_codon_cant_translate_test_'() ->
    {"Unknown amino acids, not part of a codon, "
     "can't translate",
     ?_assertMatch({error, badarg},
		   protein_translation:proteins("XYZ"))}.

'29_incomplete_rna_sequence_cant_translate_test_'() ->
    {"Incomplete RNA sequence can't translate",
     ?_assertMatch({error, badarg},
		   protein_translation:proteins("AUGU"))}.

'30_incomplete_rna_sequence_can_translate_if_valid_until_a_stop_codon_test_'() ->
    {"Incomplete RNA sequence can translate "
     "if valid until a STOP codon",
     ?_assertMatch({ok, [phenylalanine, phenylalanine]},
		   protein_translation:proteins("UUCUUCUAAUGGU"))}.
