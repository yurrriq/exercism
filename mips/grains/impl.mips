# | Register | Usage     | Type    | Description                      |
# | -------- | --------- | ------- | -------------------------------- |
# | `$a0`    | input     | integer | square number in the range 1..64 |
# | `$v0`    | output    | integer | low 32 bits of output            |
# | `$v1`    | output    | integer | high 32 bits of output           |
# | `$t0-9`  | temporary | any     | for temporary storage            |

.globl square

square:
	blt $a0, 1, invalid_square  # exit if square is too low
	bgt $a0, 64, invalid_square # exit if square is too hgh
	ble $a0, 32, low            # handle low squares
	sub $a0, $a0, $t1           # subtract 32 from the given square
	j   high                    # handle high sqaures

invalid_square:
	move $v0, $zero
	move $v1, $zero
	jr   $ra

low:
	subi $t1, $a0, 1            # subtract one from the given square
	li   $t2, 1
	sllv $v0, $t2, $t1          # 2^(n-1)
	move $v1, $zero
	jr   $ra

high:
	li   $t2, 1
	subi $t1, $a0, 32
	subi $t1, $a0, 1
	sllv $v1, $t2, $t1
	move $v0, $zero
	jr   $ra
